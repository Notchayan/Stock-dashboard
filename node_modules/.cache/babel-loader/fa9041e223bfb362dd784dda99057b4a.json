{"ast":null,"code":"var _jsxFileName = \"/Users/chayankumawat/Desktop/react-stock-dashboard-master/src/components/App.js\";\nimport React from 'react';\nimport SearchCard from './SearchCard';\nimport FilterCard from './FilterCard';\nimport TableDataCard from './TableDataCard';\nimport GraphCard from './GraphCard';\nimport '../css/styles.css';\nimport Navbar from './Navbar';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableData: [],\n      graphData: [],\n      activeStockValue: '',\n      showFilterDOM: false,\n      showFilterData: false,\n      showTableData: false,\n      showGraphData: false,\n      lsArray: [],\n      option: []\n    };\n\n    this.sendSearchResult = data => {\n      if (data !== 'Symbol not supported') {\n        this.setState({\n          tableData: this.state.tableData.concat(data),\n          showFilterDOM: true,\n          showTableData: true\n        });\n      }\n    };\n\n    this.getFilteredData = (date, response_data) => {\n      let abc = this.state.graphData;\n      let converted_array = [];\n\n      for (let i = 0; i < abc.length; i++) {\n        let obj = abc[i];\n\n        if (response_data.stockValue.indexOf(obj.stockValue) !== -1) {\n          converted_array = [];\n\n          for (let i = 0; i < response_data.response.t.length; i++) {\n            converted_array.push(new Date(response_data.response.t[i] * 1000));\n          }\n\n          abc.splice(i, 1);\n          abc.push({\n            stockValue: response_data.stockValue,\n            x_axis: converted_array,\n            y_axis: response_data.response.c,\n            date_data: {\n              filteredStartDate: new Date(date[0] * 1000),\n              filteredEndDate: new Date(date[1] * 1000)\n            }\n          });\n          this.setState({\n            graphData: abc,\n            activeStockValue: response_data.stockValue,\n            showGraphData: true\n          }, () => {\n            this.setState({\n              showGraphData: true\n            });\n          });\n        }\n      }\n    };\n\n    this.sendSearchGraphResult = (codeExist, graph_array) => {\n      if (codeExist !== 'no_data') {\n        let converted_array = [];\n        this.setState({\n          lsArray: this.state.lsArray.concat(graph_array.stockValue)\n        }, () => {\n          localStorage.setItem('historyStockArray', JSON.stringify(this.state.lsArray));\n        });\n\n        if (graph_array.response.s !== 'no_data') {\n          for (let i = 0; i < graph_array.response.t.length; i++) {\n            converted_array.push(new Date(graph_array.response.t[i] * 1000));\n          }\n\n          this.setState({\n            graphData: this.state.graphData.concat({\n              stockValue: graph_array.stockValue,\n              x_axis: converted_array,\n              y_axis: graph_array.response.c\n            }),\n            activeStockValue: graph_array.stockValue,\n            showGraphData: true\n          }, () => {\n            this.setState({\n              showGraphData: true\n            });\n          });\n        } else {\n          this.setState({\n            graphData: this.state.graphData.concat({\n              stockValue: graph_array.stockValue,\n              response: 'no_data',\n              showGraphData: true\n            })\n          }, () => {\n            this.setState({\n              showGraphData: true\n            });\n          });\n        }\n      } else {\n        alert('Stock Code does not exist within the Database.');\n        window.location.reload(true);\n      }\n    };\n\n    this.checkStockCode = stockValue => {\n      this.state.graphData.map((graphData, index) => {\n        const chartElement = document.querySelector('#myChart-' + graphData.stockValue);\n\n        if (chartElement) {\n          chartElement.style.display = 'none';\n        }\n\n        if (index === this.state.graphData.length - 1) {\n          chartElement.style.display = 'block';\n        }\n      });\n      this.setState({\n        activeStockValue: stockValue\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    this.state.graphData.map((graphData, index) => {\n      const chartElement = document.querySelector('#myChart-' + graphData.stockValue);\n\n      if (chartElement) {\n        chartElement.style.display = 'none';\n      }\n\n      if (index === this.state.graphData.length - 1) {\n        chartElement.style.display = 'block';\n      }\n    });\n  }\n\n  render() {\n    let graphCardDOM = '';\n    let optionSelectDOM = '';\n\n    if (this.state.showGraphData) {\n      graphCardDOM = this.state.graphData.map((graphData, index) => {\n        if (graphData.response !== 'no_data') {\n          const displayStyle = graphData.stockValue === this.state.activeStockValue ? 'block' : 'none';\n          return /*#__PURE__*/React.createElement(GraphCard, {\n            key: index,\n            tableData: this.state.tableData,\n            showGraphData: this.state.showGraphData,\n            showActiveStockCode: this.state.activeStockValue,\n            graphData: graphData,\n            filteredData: this.state.filteredData,\n            showFilterData: this.state.showFilterData,\n            displayStyle: displayStyle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 13\n            }\n          });\n        } else {\n          return /*#__PURE__*/React.createElement(\"p\", {\n            key: index,\n            className: \"no-graph-data-message\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 13\n            }\n          }, \"No Data Currently Available. Markets are closed during weekends and public holidays. Please filter by previous date.\");\n        }\n      });\n    }\n\n    optionSelectDOM = this.state.graphData.map((graphData, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: graphData.stockValue,\n        key: index,\n        selected: this.state.graphData[this.state.graphData.length - 1] === graphData ? 'selected' : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }\n      }, graphData.stockValue);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid app-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-2 sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"nav flex-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"nav-link active\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }, \"Dashboard\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"nav-link\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, \"Settings\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"nav-link\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, \"Accounts\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"nav-link\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }\n    }, \"Orders\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-10 content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row app-container__row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 app-container__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-container__left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SearchCard, {\n      sendSearchResult: this.sendSearchResult,\n      sendSearchGraphResult: this.sendSearchGraphResult,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FilterCard, {\n      showFilterDOM: this.state.showFilterDOM,\n      showGraphData: this.state.graphData,\n      showActiveStockCode: this.state.activeStockValue,\n      getFilteredData: this.getFilteredData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-container__right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-container graph\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    }, this.state.showGraphData ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select main__chart-select\",\n      onChange: e => this.checkStockCode(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 27\n      }\n    }, optionSelectDOM), graphCardDOM) : /*#__PURE__*/React.createElement(\"p\", {\n      className: \"no-graph-data-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 25\n      }\n    }, \"No current stock found. Please go to the first box and search for a stock.\")))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row table-data-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 table-data-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableDataCard, {\n      showTableData: this.state.showTableData,\n      tableData: this.state.tableData,\n      graphData: this.state.graphData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/chayankumawat/Desktop/react-stock-dashboard-master/src/components/App.js"],"names":["React","SearchCard","FilterCard","TableDataCard","GraphCard","Navbar","App","Component","state","tableData","graphData","activeStockValue","showFilterDOM","showFilterData","showTableData","showGraphData","lsArray","option","sendSearchResult","data","setState","concat","getFilteredData","date","response_data","abc","converted_array","i","length","obj","stockValue","indexOf","response","t","push","Date","splice","x_axis","y_axis","c","date_data","filteredStartDate","filteredEndDate","sendSearchGraphResult","codeExist","graph_array","localStorage","setItem","JSON","stringify","s","alert","window","location","reload","checkStockCode","map","index","chartElement","document","querySelector","style","display","componentDidUpdate","render","graphCardDOM","optionSelectDOM","displayStyle","filteredData","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SearchCard from './SearchCard';\nimport FilterCard from './FilterCard';\nimport TableDataCard from './TableDataCard';\nimport GraphCard from './GraphCard';\nimport '../css/styles.css';\nimport Navbar from './Navbar';\n\n\nclass App extends React.Component {\n  state = {\n    tableData: [],\n    graphData: [],\n    activeStockValue: '',\n    showFilterDOM: false,\n    showFilterData: false,\n    showTableData: false,\n    showGraphData: false,\n    lsArray: [],\n    option: [],\n  };\n\n  componentDidUpdate() {\n    this.state.graphData.map((graphData, index) => {\n      const chartElement = document.querySelector('#myChart-' + graphData.stockValue);\n      if (chartElement) {\n        chartElement.style.display = 'none';\n      }\n      if (index === this.state.graphData.length - 1) {\n        chartElement.style.display = 'block';\n      }\n    });\n  }\n\n  sendSearchResult = (data) => {\n    if (data !== 'Symbol not supported') {\n      this.setState({\n        tableData: this.state.tableData.concat(data),\n        showFilterDOM: true,\n        showTableData: true,\n      });\n    }\n  };\n\n  getFilteredData = (date, response_data) => {\n    let abc = this.state.graphData;\n    let converted_array = [];\n\n    for (let i = 0; i < abc.length; i++) {\n      let obj = abc[i];\n\n      if (response_data.stockValue.indexOf(obj.stockValue) !== -1) {\n        converted_array = [];\n        for (let i = 0; i < response_data.response.t.length; i++) {\n          converted_array.push(new Date(response_data.response.t[i] * 1000));\n        }\n        abc.splice(i, 1);\n        abc.push({\n          stockValue: response_data.stockValue,\n          x_axis: converted_array,\n          y_axis: response_data.response.c,\n          date_data: {\n            filteredStartDate: new Date(date[0] * 1000),\n            filteredEndDate: new Date(date[1] * 1000),\n          },\n        });\n        this.setState(\n          {\n            graphData: abc,\n            activeStockValue: response_data.stockValue,\n            showGraphData: true,\n          },\n          () => {\n            this.setState({\n              showGraphData: true,\n            });\n          }\n        );\n      }\n    }\n  };\n\n  sendSearchGraphResult = (codeExist, graph_array) => {\n    if (codeExist !== 'no_data') {\n      let converted_array = [];\n\n      this.setState(\n        {\n          lsArray: this.state.lsArray.concat(graph_array.stockValue),\n        },\n        () => {\n          localStorage.setItem('historyStockArray', JSON.stringify(this.state.lsArray));\n        }\n      );\n\n      if (graph_array.response.s !== 'no_data') {\n        for (let i = 0; i < graph_array.response.t.length; i++) {\n          converted_array.push(new Date(graph_array.response.t[i] * 1000));\n        }\n        this.setState(\n          {\n            graphData: this.state.graphData.concat({\n              stockValue: graph_array.stockValue,\n              x_axis: converted_array,\n              y_axis: graph_array.response.c,\n            }),\n            activeStockValue: graph_array.stockValue,\n            showGraphData: true,\n          },\n          () => {\n            this.setState({\n              showGraphData: true,\n            });\n          }\n        );\n      } else {\n        this.setState(\n          {\n            graphData: this.state.graphData.concat({\n              stockValue: graph_array.stockValue,\n              response: 'no_data',\n              showGraphData: true,\n            }),\n          },\n          () => {\n            this.setState({\n              showGraphData: true,\n            });\n          }\n        );\n      }\n    } else {\n      alert('Stock Code does not exist within the Database.');\n      window.location.reload(true);\n    }\n  };\n\n  checkStockCode = (stockValue) => {\n    this.state.graphData.map((graphData, index) => {\n      const chartElement = document.querySelector('#myChart-' + graphData.stockValue);\n      if (chartElement) {\n        chartElement.style.display = 'none';\n      }\n      if (index === this.state.graphData.length - 1) {\n        chartElement.style.display = 'block';\n      }\n    });\n\n    this.setState({\n      activeStockValue: stockValue,\n    });\n  };\n\n  render() {\n    let graphCardDOM = '';\n    let optionSelectDOM = '';\n\n    if (this.state.showGraphData) {\n      graphCardDOM = this.state.graphData.map((graphData, index) => {\n        if (graphData.response !== 'no_data') {\n          const displayStyle = graphData.stockValue === this.state.activeStockValue ? 'block' : 'none';\n          return (\n            <GraphCard\n              key={index}\n              tableData={this.state.tableData}\n              showGraphData={this.state.showGraphData}\n              showActiveStockCode={this.state.activeStockValue}\n              graphData={graphData}\n              filteredData={this.state.filteredData}\n              showFilterData={this.state.showFilterData}\n              displayStyle={displayStyle}\n            ></GraphCard>\n          );\n        } else {\n          return (\n            <p key={index} className=\"no-graph-data-message\">\n              No Data Currently Available. Markets are closed during weekends and public holidays. Please filter by previous date.\n            </p>\n          );\n        }\n      });\n    }\n\n    optionSelectDOM = this.state.graphData.map((graphData, index) => {\n      return (\n        <option\n          value={graphData.stockValue}\n          key={index}\n          selected={this.state.graphData[this.state.graphData.length - 1] === graphData ? 'selected' : ''}\n        >\n          {graphData.stockValue}\n        </option>\n      );\n    });\n\n    return (\n      <div className=\"container-fluid app-container\">\n               <Navbar />\n        <div className=\"row\">\n          <div className=\"col-lg-2 sidebar\">\n            <ul className=\"nav flex-column\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link active\" href=\"#\">\n                  Dashboard\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">\n                  Settings\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">\n                  Accounts\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">\n                  Orders\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col-lg-10 content\">\n            <div className=\"row app-container__row\">\n              <div className=\"col-12 app-container__container\">\n                <div className=\"app-container__left\">\n                  <SearchCard sendSearchResult={this.sendSearchResult} sendSearchGraphResult={this.sendSearchGraphResult}></SearchCard>\n                  <FilterCard showFilterDOM={this.state.showFilterDOM} showGraphData={this.state.graphData} showActiveStockCode={this.state.activeStockValue} getFilteredData={this.getFilteredData}></FilterCard>\n                </div>\n                <div className=\"app-container__right\">\n                  <div className=\"card card-container graph\">\n                    <div className=\"card-body\">\n                      {this.state.showGraphData ? (\n                        <div>\n                          <select className=\"custom-select main__chart-select\" onChange={(e) => this.checkStockCode(e.target.value)}>\n                            {optionSelectDOM}\n                          </select>\n                          {graphCardDOM}\n                        </div>\n                      ) : (\n                        <p className=\"no-graph-data-message\">\n                          No current stock found. Please go to the first box and search for a stock.\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row table-data-row\">\n              <div className=\"col-12 table-data-col\">\n                <TableDataCard showTableData={this.state.showTableData} tableData={this.state.tableData} graphData={this.state.graphData}></TableDataCard>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}